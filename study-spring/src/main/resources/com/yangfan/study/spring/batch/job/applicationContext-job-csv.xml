<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<batch:job id="csvJob" job-repository="mapJobRepository">
		<batch:step id="csvStep">
			<batch:tasklet transaction-manager="resourcelessTransactionManager">
				<batch:chunk reader="csvItemReader" processor="csvItemProcessor"
					writer="csvItemWriter" commit-interval="2"></batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="student" class="com.yangfan.study.spring.batch.model.Student" scope="prototype"></bean>

	<!-- lineTokenizer -->
	<bean id="lineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="delimiter" value="," />
		<property name="names">
			<list>
				<value>id</value>
				<value>name</value>
				<value>age</value>
				<value>score</value>
			</list>
		</property>
	</bean>

	<!-- 读取csv文件 -->
	<bean id="csvItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource"
			value="classpath:com/yangfan/study/spring/batch/data/csv/input.csv"></property>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer" ref="lineTokenizer"></property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="student"></property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- 写CSV文件 -->
	<bean id="csvItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		<property name="resource" value="file:src/main/resources/com/yangfan/study/spring/batch/data/csv/output.csv" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value=","></property>
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="name,age,score"></property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

</beans>